{"version":3,"sources":["webpack:///./crate/pkg/ball_wasm.js"],"names":["__webpack_require__","r","__webpack_exports__","d","__wbg_random_918d3291fe65513c","drawWasmBallToCtx","drawWasmBallToHtml","__wbg_sqrt_6ac1ec864938feb9","__widl_f_begin_path_CanvasRenderingContext2D","__widl_f_fill_CanvasRenderingContext2D","__widl_f_set_fill_style_CanvasRenderingContext2D","__widl_f_arc_CanvasRenderingContext2D","__widl_f_close_path_CanvasRenderingContext2D","__widl_f_clear_rect_CanvasRenderingContext2D","BallCollection","Ball","__wbindgen_number_get","__wbindgen_is_null","__wbindgen_is_undefined","__wbindgen_boolean_get","__wbindgen_is_symbol","__wbindgen_string_get","__wbindgen_throw","_ball_wasm_bg__WEBPACK_IMPORTED_MODULE_0__","Math","random","heap","Array","fill","undefined","push","stack_pointer","addBorrowedObject","obj","Error","cachedTextDecoder","TextDecoder","cachegetUint8Memory","getUint8Memory","buffer","Uint8Array","getStringFromWasm","ptr","len","decode","subarray","cachedGlobalArgumentPtr","globalArgumentPtr","cachegetUint32Memory","getUint32Memory","Uint32Array","arg0","arg1","arg2","retptr","mem","rustptr","rustlen","realRet","slice","sqrt","getObject","idx","__widl_f_begin_path_CanvasRenderingContext2D_target","CanvasRenderingContext2D","prototype","beginPath","call","__widl_f_fill_CanvasRenderingContext2D_target","__widl_f_set_fill_style_CanvasRenderingContext2D_target","id","desc","Object","getOwnPropertyDescriptor","getPrototypeOf","GetOwnOrInheritedPropertyDescriptor","set","__widl_f_arc_CanvasRenderingContext2D_target","arc","heap_next","length","arg3","arg4","arg5","exnptr","e","view","addHeapObject","__widl_f_close_path_CanvasRenderingContext2D_target","closePath","__widl_f_clear_rect_CanvasRenderingContext2D_target","clearRect","[object Object]","this","freeBallCollection","ptr0","freeBall","x","y","radius","arg6","arg7","arg8","n","invalid","i","v","cachedTextEncoder","TextEncoder","WASM_VECTOR_LEN","len_ptr","arg","buf","encode","passStringToWasm"],"mappings":"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","file":"1.bundle.js","sourcesContent":["/* tslint:disable */\nimport * as wasm from './ball_wasm_bg';\n\nexport function __wbg_random_918d3291fe65513c() {\n    return Math.random();\n}\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet stack_pointer = 32;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8');\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nlet cachedGlobalArgumentPtr = null;\nfunction globalArgumentPtr() {\n    if (cachedGlobalArgumentPtr === null) {\n        cachedGlobalArgumentPtr = wasm.__wbindgen_global_argument_ptr();\n    }\n    return cachedGlobalArgumentPtr;\n}\n\nlet cachegetUint32Memory = null;\nfunction getUint32Memory() {\n    if (cachegetUint32Memory === null || cachegetUint32Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory;\n}\n/**\n* Note: color is represented as &wasm_bindgen::JsValue\\n a representation of an object owned by JS : https://rustwasm.github.io/wasm-bindgen/api/wasm_bindgen/struct.JsValue.html\\n\\n A JsValue doesn\\'t actually live in Rust right now but actually in a table owned by the wasm-bindgen generated JS glue code. Eventually the ownership will transfer into wasm directly and this will likely become more efficient, but for now it may be slightly slow.\n* @param {Ball} arg0\n* @param {any} arg1\n* @param {any} arg2\n* @returns {void}\n*/\nexport function drawWasmBallToCtx(arg0, arg1, arg2) {\n    try {\n        return wasm.drawWasmBallToCtx(arg0.ptr, addBorrowedObject(arg1), addBorrowedObject(arg2));\n\n    } finally {\n        heap[stack_pointer++] = undefined;\n        heap[stack_pointer++] = undefined;\n\n    }\n\n}\n\n/**\n* @param {Ball} arg0\n* @param {any} arg1\n* @returns {string}\n*/\nexport function drawWasmBallToHtml(arg0, arg1) {\n    const retptr = globalArgumentPtr();\n    try {\n        wasm.drawWasmBallToHtml(retptr, arg0.ptr, addBorrowedObject(arg1));\n        const mem = getUint32Memory();\n        const rustptr = mem[retptr / 4];\n        const rustlen = mem[retptr / 4 + 1];\n\n        const realRet = getStringFromWasm(rustptr, rustlen).slice();\n        wasm.__wbindgen_free(rustptr, rustlen * 1);\n        return realRet;\n\n\n    } finally {\n        heap[stack_pointer++] = undefined;\n\n    }\n\n}\n\nexport function __wbg_sqrt_6ac1ec864938feb9(arg0) {\n    return Math.sqrt(arg0);\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nconst __widl_f_begin_path_CanvasRenderingContext2D_target = typeof CanvasRenderingContext2D === 'undefined' ? null : CanvasRenderingContext2D.prototype.beginPath || function() {\n    throw new Error(`wasm-bindgen: CanvasRenderingContext2D.beginPath does not exist`);\n};\n\nexport function __widl_f_begin_path_CanvasRenderingContext2D(arg0) {\n    __widl_f_begin_path_CanvasRenderingContext2D_target.call(getObject(arg0));\n}\n\nconst __widl_f_fill_CanvasRenderingContext2D_target = typeof CanvasRenderingContext2D === 'undefined' ? null : CanvasRenderingContext2D.prototype.fill || function() {\n    throw new Error(`wasm-bindgen: CanvasRenderingContext2D.fill does not exist`);\n};\n\nexport function __widl_f_fill_CanvasRenderingContext2D(arg0) {\n    __widl_f_fill_CanvasRenderingContext2D_target.call(getObject(arg0));\n}\n\nfunction GetOwnOrInheritedPropertyDescriptor(obj, id) {\n    while (obj) {\n        let desc = Object.getOwnPropertyDescriptor(obj, id);\n        if (desc) return desc;\n        obj = Object.getPrototypeOf(obj);\n    }\nreturn {}\n}\n\nconst __widl_f_set_fill_style_CanvasRenderingContext2D_target = GetOwnOrInheritedPropertyDescriptor(typeof CanvasRenderingContext2D === 'undefined' ? null : CanvasRenderingContext2D.prototype, 'fillStyle').set || function() {\n    throw new Error(`wasm-bindgen: CanvasRenderingContext2D.fillStyle does not exist`);\n};\n\nexport function __widl_f_set_fill_style_CanvasRenderingContext2D(arg0, arg1) {\n    __widl_f_set_fill_style_CanvasRenderingContext2D_target.call(getObject(arg0), getObject(arg1));\n}\n\nconst __widl_f_arc_CanvasRenderingContext2D_target = typeof CanvasRenderingContext2D === 'undefined' ? null : CanvasRenderingContext2D.prototype.arc || function() {\n    throw new Error(`wasm-bindgen: CanvasRenderingContext2D.arc does not exist`);\n};\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nexport function __widl_f_arc_CanvasRenderingContext2D(arg0, arg1, arg2, arg3, arg4, arg5, exnptr) {\n    try {\n        __widl_f_arc_CanvasRenderingContext2D_target.call(getObject(arg0), arg1, arg2, arg3, arg4, arg5);\n    } catch (e) {\n        const view = getUint32Memory();\n        view[exnptr / 4] = 1;\n        view[exnptr / 4 + 1] = addHeapObject(e);\n\n    }\n}\n\nconst __widl_f_close_path_CanvasRenderingContext2D_target = typeof CanvasRenderingContext2D === 'undefined' ? null : CanvasRenderingContext2D.prototype.closePath || function() {\n    throw new Error(`wasm-bindgen: CanvasRenderingContext2D.closePath does not exist`);\n};\n\nexport function __widl_f_close_path_CanvasRenderingContext2D(arg0) {\n    __widl_f_close_path_CanvasRenderingContext2D_target.call(getObject(arg0));\n}\n\nconst __widl_f_clear_rect_CanvasRenderingContext2D_target = typeof CanvasRenderingContext2D === 'undefined' ? null : CanvasRenderingContext2D.prototype.clearRect || function() {\n    throw new Error(`wasm-bindgen: CanvasRenderingContext2D.clearRect does not exist`);\n};\n\nexport function __widl_f_clear_rect_CanvasRenderingContext2D(arg0, arg1, arg2, arg3, arg4) {\n    __widl_f_clear_rect_CanvasRenderingContext2D_target.call(getObject(arg0), arg1, arg2, arg3, arg4);\n}\n\nfunction freeBallCollection(ptr) {\n\n    wasm.__wbg_ballcollection_free(ptr);\n}\n/**\n*/\nexport class BallCollection {\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n        freeBallCollection(ptr);\n    }\n\n    /**\n    * @returns {}\n    */\n    constructor() {\n        this.ptr = wasm.ballcollection_new();\n    }\n    /**\n    * @param {Ball} arg0\n    * @returns {void}\n    */\n    push(arg0) {\n        const ptr0 = arg0.ptr;\n        arg0.ptr = 0;\n        return wasm.ballcollection_push(this.ptr, ptr0);\n    }\n    /**\n    * @param {number} arg0\n    * @param {number} arg1\n    * @param {number} arg2\n    * @param {number} arg3\n    * @param {number} arg4\n    * @param {number} arg5\n    * @returns {void}\n    */\n    fill(arg0, arg1, arg2, arg3, arg4, arg5) {\n        return wasm.ballcollection_fill(this.ptr, arg0, arg1, arg2, arg3, arg4, arg5);\n    }\n    /**\n    * @returns {number}\n    */\n    len() {\n        return wasm.ballcollection_len(this.ptr);\n    }\n    /**\n    * @param {number} arg0\n    * @param {number} arg1\n    * @returns {void}\n    */\n    update(arg0, arg1) {\n        return wasm.ballcollection_update(this.ptr, arg0, arg1);\n    }\n    /**\n    * @param {any} arg0\n    * @param {any} arg1\n    * @param {number} arg2\n    * @param {number} arg3\n    * @returns {void}\n    */\n    drawToCtx(arg0, arg1, arg2, arg3) {\n        try {\n            return wasm.ballcollection_drawToCtx(this.ptr, addBorrowedObject(arg0), addBorrowedObject(arg1), arg2, arg3);\n\n        } finally {\n            heap[stack_pointer++] = undefined;\n            heap[stack_pointer++] = undefined;\n\n        }\n\n    }\n    /**\n    * @param {any} arg0\n    * @returns {string}\n    */\n    drawToHtml(arg0) {\n        const retptr = globalArgumentPtr();\n        try {\n            wasm.ballcollection_drawToHtml(retptr, this.ptr, addBorrowedObject(arg0));\n            const mem = getUint32Memory();\n            const rustptr = mem[retptr / 4];\n            const rustlen = mem[retptr / 4 + 1];\n\n            const realRet = getStringFromWasm(rustptr, rustlen).slice();\n            wasm.__wbindgen_free(rustptr, rustlen * 1);\n            return realRet;\n\n\n        } finally {\n            heap[stack_pointer++] = undefined;\n\n        }\n\n    }\n    /**\n    * @param {number} arg0\n    * @param {number} arg1\n    * @returns {void}\n    */\n    setRandomPositionAndSpeedInBounds(arg0, arg1) {\n        return wasm.ballcollection_setRandomPositionAndSpeedInBounds(this.ptr, arg0, arg1);\n    }\n    /**\n    * @returns {string}\n    */\n    format() {\n        const retptr = globalArgumentPtr();\n        wasm.ballcollection_format(retptr, this.ptr);\n        const mem = getUint32Memory();\n        const rustptr = mem[retptr / 4];\n        const rustlen = mem[retptr / 4 + 1];\n\n        const realRet = getStringFromWasm(rustptr, rustlen).slice();\n        wasm.__wbindgen_free(rustptr, rustlen * 1);\n        return realRet;\n\n    }\n}\n\nfunction freeBall(ptr) {\n\n    wasm.__wbg_ball_free(ptr);\n}\n/**\n*/\nexport class Ball {\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n        freeBall(ptr);\n    }\n\n    /**\n    * @returns {number}\n    */\n    get x() {\n        return wasm.__wbg_get_ball_x(this.ptr);\n    }\n    set x(arg0) {\n        return wasm.__wbg_set_ball_x(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get y() {\n        return wasm.__wbg_get_ball_y(this.ptr);\n    }\n    set y(arg0) {\n        return wasm.__wbg_set_ball_y(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get radius() {\n        return wasm.__wbg_get_ball_radius(this.ptr);\n    }\n    set radius(arg0) {\n        return wasm.__wbg_set_ball_radius(this.ptr, arg0);\n    }\n    /**\n    * @param {number} arg0\n    * @param {number} arg1\n    * @param {number} arg2\n    * @param {number} arg3\n    * @param {number} arg4\n    * @param {number} arg5\n    * @param {number} arg6\n    * @param {number} arg7\n    * @param {number} arg8\n    * @returns {}\n    */\n    constructor(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        this.ptr = wasm.ball_new(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);\n    }\n    /**\n    * @returns {void}\n    */\n    step() {\n        return wasm.ball_step(this.ptr);\n    }\n    /**\n    * @param {number} arg0\n    * @param {number} arg1\n    * @returns {void}\n    */\n    manageStageBorderCollision(arg0, arg1) {\n        return wasm.ball_manageStageBorderCollision(this.ptr, arg0, arg1);\n    }\n    /**\n    * @param {Ball} arg0\n    * @returns {boolean}\n    */\n    checkBallCollision(arg0) {\n        return (wasm.ball_checkBallCollision(this.ptr, arg0.ptr)) !== 0;\n    }\n    /**\n    * @param {Ball} arg0\n    * @returns {void}\n    */\n    resolveBallCollision(arg0) {\n        return wasm.ball_resolveBallCollision(this.ptr, arg0.ptr);\n    }\n    /**\n    * @param {number} arg0\n    * @param {number} arg1\n    * @returns {void}\n    */\n    setRandomPositionAndSpeedInBounds(arg0, arg1) {\n        return wasm.ball_setRandomPositionAndSpeedInBounds(this.ptr, arg0, arg1);\n    }\n    /**\n    * @returns {number}\n    */\n    random() {\n        return wasm.ball_random(this.ptr);\n    }\n}\n\nexport function __wbindgen_number_get(n, invalid) {\n    let obj = getObject(n);\n    if (typeof(obj) === 'number') return obj;\n    getUint8Memory()[invalid] = 1;\n    return 0;\n}\n\nexport function __wbindgen_is_null(idx) {\n    return getObject(idx) === null ? 1 : 0;\n}\n\nexport function __wbindgen_is_undefined(idx) {\n    return getObject(idx) === undefined ? 1 : 0;\n}\n\nexport function __wbindgen_boolean_get(i) {\n    let v = getObject(i);\n    if (typeof(v) === 'boolean') {\n        return v ? 1 : 0;\n    } else {\n        return 2;\n    }\n}\n\nexport function __wbindgen_is_symbol(i) {\n    return typeof(getObject(i)) === 'symbol' ? 1 : 0;\n}\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passStringToWasm(arg) {\n\n    const buf = cachedTextEncoder.encode(arg);\n    const ptr = wasm.__wbindgen_malloc(buf.length);\n    getUint8Memory().set(buf, ptr);\n    WASM_VECTOR_LEN = buf.length;\n    return ptr;\n}\n\nexport function __wbindgen_string_get(i, len_ptr) {\n    let obj = getObject(i);\n    if (typeof(obj) !== 'string') return 0;\n    const ptr = passStringToWasm(obj);\n    getUint32Memory()[len_ptr / 4] = WASM_VECTOR_LEN;\n    return ptr;\n}\n\nexport function __wbindgen_throw(ptr, len) {\n    throw new Error(getStringFromWasm(ptr, len));\n}\n\n"],"sourceRoot":""}