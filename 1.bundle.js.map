{"version":3,"sources":["webpack:///./crate/pkg/ball_wasm.js"],"names":["__webpack_require__","r","__webpack_exports__","d","__wbg_random_918d3291fe65513c","drawWasmBallToCtx","drawWasmBallToHtml","__wbg_sqrt_6ac1ec864938feb9","__widl_f_begin_path_CanvasRenderingContext2D","__widl_f_fill_CanvasRenderingContext2D","__widl_f_set_fill_style_CanvasRenderingContext2D","__widl_f_arc_CanvasRenderingContext2D","__widl_f_close_path_CanvasRenderingContext2D","Ball","__wbindgen_number_get","__wbindgen_is_null","__wbindgen_is_undefined","__wbindgen_boolean_get","__wbindgen_is_symbol","__wbindgen_string_get","__wbindgen_throw","_ball_wasm_bg__WEBPACK_IMPORTED_MODULE_0__","Math","random","heap","Array","fill","undefined","push","stack_pointer","addBorrowedObject","obj","Error","arg0","arg1","arg2","ptr","cachedTextDecoder","TextDecoder","cachegetUint8Memory","getUint8Memory","buffer","Uint8Array","getStringFromWasm","len","decode","subarray","cachedGlobalArgumentPtr","cachegetUint32Memory","getUint32Memory","Uint32Array","retptr","mem","rustptr","rustlen","realRet","slice","sqrt","getObject","idx","__widl_f_begin_path_CanvasRenderingContext2D_target","CanvasRenderingContext2D","prototype","beginPath","call","__widl_f_fill_CanvasRenderingContext2D_target","__widl_f_set_fill_style_CanvasRenderingContext2D_target","id","desc","Object","getOwnPropertyDescriptor","getPrototypeOf","GetOwnOrInheritedPropertyDescriptor","set","__widl_f_arc_CanvasRenderingContext2D_target","arc","heap_next","length","arg3","arg4","arg5","exnptr","e","view","addHeapObject","__widl_f_close_path_CanvasRenderingContext2D_target","closePath","[object Object]","this","freeBall","x","y","radius","arg6","arg7","arg8","n","invalid","i","v","cachedTextEncoder","TextEncoder","WASM_VECTOR_LEN","len_ptr","arg","buf","encode","passStringToWasm"],"mappings":"uFAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,kDAAAE,IAAAJ,EAAAG,EAAAD,EAAA,sCAAAG,IAAAL,EAAAG,EAAAD,EAAA,uCAAAI,IAAAN,EAAAG,EAAAD,EAAA,gDAAAK,IAAAP,EAAAG,EAAAD,EAAA,iEAAAM,IAAAR,EAAAG,EAAAD,EAAA,2DAAAO,IAAAT,EAAAG,EAAAD,EAAA,qEAAAQ,IAAAV,EAAAG,EAAAD,EAAA,0DAAAS,IAAAX,EAAAG,EAAAD,EAAA,iEAAAU,IAAAZ,EAAAG,EAAAD,EAAA,yBAAAW,IAAAb,EAAAG,EAAAD,EAAA,0CAAAY,IAAAd,EAAAG,EAAAD,EAAA,uCAAAa,IAAAf,EAAAG,EAAAD,EAAA,4CAAAc,IAAAhB,EAAAG,EAAAD,EAAA,2CAAAe,IAAAjB,EAAAG,EAAAD,EAAA,yCAAAgB,IAAAlB,EAAAG,EAAAD,EAAA,0CAAAiB,IAAAnB,EAAAG,EAAAD,EAAA,qCAAAkB,IAAA,IAAAC,EAAArB,EAAA,GAGO,SAAAI,IACP,OAAAkB,KAAAC,SAGA,MAAAC,EAAA,IAAAC,MAAA,IAEAD,EAAAE,UAAAC,GAEAH,EAAAI,UAAAD,EAAA,YAEA,IAAAE,EAAA,GAEA,SAAAC,EAAAC,GACA,MAAAF,EAAA,UAAAG,MAAA,mBAEA,OADAR,IAAAK,GAAAE,EACAF,EASO,SAAAxB,EAAA4B,EAAAC,EAAAC,GACP,IACA,OAAed,EAAA,EAAsBY,EAAAG,IAAAN,EAAAI,GAAAJ,EAAAK,IAEhC,QACLX,EAAAK,UAAAF,EACAH,EAAAK,UAAAF,GAMA,IAAAU,EAAA,IAAAC,YAAA,SAEAC,EAAA,KACA,SAAAC,IAIA,OAHA,OAAAD,KAAAE,SAAuEpB,EAAA,EAAWoB,SAClFF,EAAA,IAAAG,WAA6CrB,EAAA,EAAWoB,SAExDF,EAGA,SAAAI,EAAAP,EAAAQ,GACA,OAAAP,EAAAQ,OAAAL,IAAAM,SAAAV,IAAAQ,IAGA,IAAAG,EAAA,KAQA,IAAAC,EAAA,KACA,SAAAC,IAIA,OAHA,OAAAD,KAAAP,SAAyEpB,EAAA,EAAWoB,SACpFO,EAAA,IAAAE,YAA+C7B,EAAA,EAAWoB,SAE1DO,EAOO,SAAA1C,EAAA2B,EAAAC,GACP,MAAAiB,GAnBA,OAAAJ,IACAA,EAAkC1B,EAAA,KAElC0B,GAiBA,IACQ1B,EAAA,EAAuB8B,EAAAlB,EAAAG,IAAAN,EAAAI,IAC/B,MAAAkB,EAAAH,IACAI,EAAAD,EAAAD,EAAA,GACAG,EAAAF,EAAAD,EAAA,KAEAI,EAAAZ,EAAAU,EAAAC,GAAAE,QAEA,OADQnC,EAAA,EAAoBgC,EAAA,EAAAC,GAC5BC,EAGK,QACL/B,EAAAK,UAAAF,GAMO,SAAApB,EAAA0B,GACP,OAAAX,KAAAmC,KAAAxB,GAGA,SAAAyB,EAAAC,GAAyB,OAAAnC,EAAAmC,GAEzB,MAAAC,EAAA,oBAAAC,yBAAA,KAAAA,yBAAAC,UAAAC,WAAA,WACA,UAAA/B,MAAA,oEAGO,SAAAxB,EAAAyB,GACP2B,EAAAI,KAAAN,EAAAzB,IAGA,MAAAgC,EAAA,oBAAAJ,yBAAA,KAAAA,yBAAAC,UAAApC,MAAA,WACA,UAAAM,MAAA,+DAGO,SAAAvB,EAAAwB,GACPgC,EAAAD,KAAAN,EAAAzB,IAYA,MAAAiC,EATA,SAAAnC,EAAAoC,GACA,KAAApC,GAAA,CACA,IAAAqC,EAAAC,OAAAC,yBAAAvC,EAAAoC,GACA,GAAAC,EAAA,OAAAA,EACArC,EAAAsC,OAAAE,eAAAxC,GAEA,SAGAyC,CAAA,oBAAAX,yBAAA,KAAAA,yBAAAC,UAAA,aAAAW,KAAA,WACA,UAAAzC,MAAA,oEAGO,SAAAtB,EAAAuB,EAAAC,GACPgC,EAAAF,KAAAN,EAAAzB,GAAAyB,EAAAxB,IAGA,MAAAwC,EAAA,oBAAAb,yBAAA,KAAAA,yBAAAC,UAAAa,KAAA,WACA,UAAA3C,MAAA,8DAGA,IAAA4C,EAAApD,EAAAqD,OAWO,SAAAlE,EAAAsB,EAAAC,EAAAC,EAAA2C,EAAAC,EAAAC,EAAAC,GACP,IACAP,EAAAV,KAAAN,EAAAzB,GAAAC,EAAAC,EAAA2C,EAAAC,EAAAC,GACK,MAAAE,GACL,MAAAC,EAAAlC,IACAkC,EAAAF,EAAA,KACAE,EAAAF,EAAA,KAfA,SAAAlD,GACA6C,IAAApD,EAAAqD,QAAArD,EAAAI,KAAAJ,EAAAqD,OAAA,GACA,MAAAlB,EAAAiB,EAIA,OAHAA,EAAApD,EAAAmC,GAEAnC,EAAAmC,GAAA5B,EACA4B,EASAyB,CAAAF,IAKA,MAAAG,EAAA,oBAAAxB,yBAAA,KAAAA,yBAAAC,UAAAwB,WAAA,WACA,UAAAtD,MAAA,oEAGO,SAAApB,EAAAqB,GACPoD,EAAArB,KAAAN,EAAAzB,IASO,MAAApB,EAEP0E,OACA,MAAAnD,EAAAoD,KAAApD,IACAoD,KAAApD,IAAA,EAVA,SAAAA,GAEIf,EAAA,EAAoBe,GASxBqD,CAAArD,GAMAsD,QACA,OAAerE,EAAA,EAAqBmE,KAAApD,KAEpCsD,MAAAzD,GACA,OAAeZ,EAAA,EAAqBmE,KAAApD,IAAAH,GAKpC0D,QACA,OAAetE,EAAA,EAAqBmE,KAAApD,KAEpCuD,MAAA1D,GACA,OAAeZ,EAAA,EAAqBmE,KAAApD,IAAAH,GAKpC2D,aACA,OAAevE,EAAA,EAA0BmE,KAAApD,KAEzCwD,WAAA3D,GACA,OAAeZ,EAAA,EAA0BmE,KAAApD,IAAAH,GAczCsD,YAAAtD,EAAAC,EAAAC,EAAA2C,EAAAC,EAAAC,EAAAa,EAAAC,EAAAC,GACAP,KAAApD,IAAmBf,EAAA,EAAaY,EAAAC,EAAAC,EAAA2C,EAAAC,EAAAC,EAAAa,EAAAC,EAAAC,GAKhCR,OACA,OAAelE,EAAA,EAAcmE,KAAApD,KAO7BmD,2BAAAtD,EAAAC,GACA,OAAeb,EAAA,EAAoCmE,KAAApD,IAAAH,EAAAC,GAMnDqD,mBAAAtD,GACA,OAA4C,IAA5BZ,EAAA,EAA4BmE,KAAApD,IAAAH,EAAAG,KAM5CmD,qBAAAtD,GACA,OAAeZ,EAAA,EAA8BmE,KAAApD,IAAAH,EAAAG,KAO7CmD,kCAAAtD,EAAAC,GACA,OAAeb,EAAA,EAA2CmE,KAAApD,IAAAH,EAAAC,GAK1DqD,SACA,OAAelE,EAAA,EAAgBmE,KAAApD,MAIxB,SAAAtB,EAAAkF,EAAAC,GACP,IAAAlE,EAAA2B,EAAAsC,GACA,yBAAAjE,GACAS,IAAAyD,GAAA,EACA,GAGO,SAAAlF,EAAA4C,GACP,cAAAD,EAAAC,GAAA,IAGO,SAAA3C,EAAA2C,GACP,YAAAhC,IAAA+B,EAAAC,GAAA,IAGO,SAAA1C,EAAAiF,GACP,IAAAC,EAAAzC,EAAAwC,GACA,0BACAC,EAAA,IAEA,EAIO,SAAAjF,EAAAgF,GACP,uBAAAxC,EAAAwC,GAAA,IAGA,IAAAE,EAAA,IAAAC,YAAA,SAEAC,EAAA,EAWO,SAAAnF,EAAA+E,EAAAK,GACP,IAAAxE,EAAA2B,EAAAwC,GACA,+BACA,MAAA9D,EAZA,SAAAoE,GAEA,MAAAC,EAAAL,EAAAM,OAAAF,GACApE,EAAgBf,EAAA,EAAsBoF,EAAA5B,QAGtC,OAFArC,IAAAiC,IAAAgC,EAAArE,GACAkE,EAAAG,EAAA5B,OACAzC,EAMAuE,CAAA5E,GAEA,OADAkB,IAAAsD,EAAA,GAAAD,EACAlE,EAGO,SAAAhB,EAAAgB,EAAAQ,GACP,UAAAZ,MAAAW,EAAAP,EAAAQ","file":"1.bundle.js","sourcesContent":["/* tslint:disable */\nimport * as wasm from './ball_wasm_bg';\n\nexport function __wbg_random_918d3291fe65513c() {\n    return Math.random();\n}\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet stack_pointer = 32;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n/**\n* Note: color is represented as &wasm_bindgen::JsValue\\n a representation of an object owned by JS : https://rustwasm.github.io/wasm-bindgen/api/wasm_bindgen/struct.JsValue.html\\n\\n A JsValue doesn\\'t actually live in Rust right now but actually in a table owned by the wasm-bindgen generated JS glue code. Eventually the ownership will transfer into wasm directly and this will likely become more efficient, but for now it may be slightly slow.\n* @param {Ball} arg0\n* @param {any} arg1\n* @param {any} arg2\n* @returns {void}\n*/\nexport function drawWasmBallToCtx(arg0, arg1, arg2) {\n    try {\n        return wasm.drawWasmBallToCtx(arg0.ptr, addBorrowedObject(arg1), addBorrowedObject(arg2));\n\n    } finally {\n        heap[stack_pointer++] = undefined;\n        heap[stack_pointer++] = undefined;\n\n    }\n\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8');\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nlet cachedGlobalArgumentPtr = null;\nfunction globalArgumentPtr() {\n    if (cachedGlobalArgumentPtr === null) {\n        cachedGlobalArgumentPtr = wasm.__wbindgen_global_argument_ptr();\n    }\n    return cachedGlobalArgumentPtr;\n}\n\nlet cachegetUint32Memory = null;\nfunction getUint32Memory() {\n    if (cachegetUint32Memory === null || cachegetUint32Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory;\n}\n/**\n* @param {Ball} arg0\n* @param {any} arg1\n* @returns {string}\n*/\nexport function drawWasmBallToHtml(arg0, arg1) {\n    const retptr = globalArgumentPtr();\n    try {\n        wasm.drawWasmBallToHtml(retptr, arg0.ptr, addBorrowedObject(arg1));\n        const mem = getUint32Memory();\n        const rustptr = mem[retptr / 4];\n        const rustlen = mem[retptr / 4 + 1];\n\n        const realRet = getStringFromWasm(rustptr, rustlen).slice();\n        wasm.__wbindgen_free(rustptr, rustlen * 1);\n        return realRet;\n\n\n    } finally {\n        heap[stack_pointer++] = undefined;\n\n    }\n\n}\n\nexport function __wbg_sqrt_6ac1ec864938feb9(arg0) {\n    return Math.sqrt(arg0);\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nconst __widl_f_begin_path_CanvasRenderingContext2D_target = typeof CanvasRenderingContext2D === 'undefined' ? null : CanvasRenderingContext2D.prototype.beginPath || function() {\n    throw new Error(`wasm-bindgen: CanvasRenderingContext2D.beginPath does not exist`);\n};\n\nexport function __widl_f_begin_path_CanvasRenderingContext2D(arg0) {\n    __widl_f_begin_path_CanvasRenderingContext2D_target.call(getObject(arg0));\n}\n\nconst __widl_f_fill_CanvasRenderingContext2D_target = typeof CanvasRenderingContext2D === 'undefined' ? null : CanvasRenderingContext2D.prototype.fill || function() {\n    throw new Error(`wasm-bindgen: CanvasRenderingContext2D.fill does not exist`);\n};\n\nexport function __widl_f_fill_CanvasRenderingContext2D(arg0) {\n    __widl_f_fill_CanvasRenderingContext2D_target.call(getObject(arg0));\n}\n\nfunction GetOwnOrInheritedPropertyDescriptor(obj, id) {\n    while (obj) {\n        let desc = Object.getOwnPropertyDescriptor(obj, id);\n        if (desc) return desc;\n        obj = Object.getPrototypeOf(obj);\n    }\nreturn {}\n}\n\nconst __widl_f_set_fill_style_CanvasRenderingContext2D_target = GetOwnOrInheritedPropertyDescriptor(typeof CanvasRenderingContext2D === 'undefined' ? null : CanvasRenderingContext2D.prototype, 'fillStyle').set || function() {\n    throw new Error(`wasm-bindgen: CanvasRenderingContext2D.fillStyle does not exist`);\n};\n\nexport function __widl_f_set_fill_style_CanvasRenderingContext2D(arg0, arg1) {\n    __widl_f_set_fill_style_CanvasRenderingContext2D_target.call(getObject(arg0), getObject(arg1));\n}\n\nconst __widl_f_arc_CanvasRenderingContext2D_target = typeof CanvasRenderingContext2D === 'undefined' ? null : CanvasRenderingContext2D.prototype.arc || function() {\n    throw new Error(`wasm-bindgen: CanvasRenderingContext2D.arc does not exist`);\n};\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nexport function __widl_f_arc_CanvasRenderingContext2D(arg0, arg1, arg2, arg3, arg4, arg5, exnptr) {\n    try {\n        __widl_f_arc_CanvasRenderingContext2D_target.call(getObject(arg0), arg1, arg2, arg3, arg4, arg5);\n    } catch (e) {\n        const view = getUint32Memory();\n        view[exnptr / 4] = 1;\n        view[exnptr / 4 + 1] = addHeapObject(e);\n\n    }\n}\n\nconst __widl_f_close_path_CanvasRenderingContext2D_target = typeof CanvasRenderingContext2D === 'undefined' ? null : CanvasRenderingContext2D.prototype.closePath || function() {\n    throw new Error(`wasm-bindgen: CanvasRenderingContext2D.closePath does not exist`);\n};\n\nexport function __widl_f_close_path_CanvasRenderingContext2D(arg0) {\n    __widl_f_close_path_CanvasRenderingContext2D_target.call(getObject(arg0));\n}\n\nfunction freeBall(ptr) {\n\n    wasm.__wbg_ball_free(ptr);\n}\n/**\n*/\nexport class Ball {\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n        freeBall(ptr);\n    }\n\n    /**\n    * @returns {number}\n    */\n    get x() {\n        return wasm.__wbg_get_ball_x(this.ptr);\n    }\n    set x(arg0) {\n        return wasm.__wbg_set_ball_x(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get y() {\n        return wasm.__wbg_get_ball_y(this.ptr);\n    }\n    set y(arg0) {\n        return wasm.__wbg_set_ball_y(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get radius() {\n        return wasm.__wbg_get_ball_radius(this.ptr);\n    }\n    set radius(arg0) {\n        return wasm.__wbg_set_ball_radius(this.ptr, arg0);\n    }\n    /**\n    * @param {number} arg0\n    * @param {number} arg1\n    * @param {number} arg2\n    * @param {number} arg3\n    * @param {number} arg4\n    * @param {number} arg5\n    * @param {number} arg6\n    * @param {number} arg7\n    * @param {number} arg8\n    * @returns {}\n    */\n    constructor(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        this.ptr = wasm.ball_new(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);\n    }\n    /**\n    * @returns {void}\n    */\n    step() {\n        return wasm.ball_step(this.ptr);\n    }\n    /**\n    * @param {number} arg0\n    * @param {number} arg1\n    * @returns {void}\n    */\n    manageStageBorderCollision(arg0, arg1) {\n        return wasm.ball_manageStageBorderCollision(this.ptr, arg0, arg1);\n    }\n    /**\n    * @param {Ball} arg0\n    * @returns {boolean}\n    */\n    checkBallCollision(arg0) {\n        return (wasm.ball_checkBallCollision(this.ptr, arg0.ptr)) !== 0;\n    }\n    /**\n    * @param {Ball} arg0\n    * @returns {void}\n    */\n    resolveBallCollision(arg0) {\n        return wasm.ball_resolveBallCollision(this.ptr, arg0.ptr);\n    }\n    /**\n    * @param {number} arg0\n    * @param {number} arg1\n    * @returns {void}\n    */\n    setRandomPositionAndSpeedInBounds(arg0, arg1) {\n        return wasm.ball_setRandomPositionAndSpeedInBounds(this.ptr, arg0, arg1);\n    }\n    /**\n    * @returns {number}\n    */\n    random() {\n        return wasm.ball_random(this.ptr);\n    }\n}\n\nexport function __wbindgen_number_get(n, invalid) {\n    let obj = getObject(n);\n    if (typeof(obj) === 'number') return obj;\n    getUint8Memory()[invalid] = 1;\n    return 0;\n}\n\nexport function __wbindgen_is_null(idx) {\n    return getObject(idx) === null ? 1 : 0;\n}\n\nexport function __wbindgen_is_undefined(idx) {\n    return getObject(idx) === undefined ? 1 : 0;\n}\n\nexport function __wbindgen_boolean_get(i) {\n    let v = getObject(i);\n    if (typeof(v) === 'boolean') {\n        return v ? 1 : 0;\n    } else {\n        return 2;\n    }\n}\n\nexport function __wbindgen_is_symbol(i) {\n    return typeof(getObject(i)) === 'symbol' ? 1 : 0;\n}\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passStringToWasm(arg) {\n\n    const buf = cachedTextEncoder.encode(arg);\n    const ptr = wasm.__wbindgen_malloc(buf.length);\n    getUint8Memory().set(buf, ptr);\n    WASM_VECTOR_LEN = buf.length;\n    return ptr;\n}\n\nexport function __wbindgen_string_get(i, len_ptr) {\n    let obj = getObject(i);\n    if (typeof(obj) !== 'string') return 0;\n    const ptr = passStringToWasm(obj);\n    getUint32Memory()[len_ptr / 4] = WASM_VECTOR_LEN;\n    return ptr;\n}\n\nexport function __wbindgen_throw(ptr, len) {\n    throw new Error(getStringFromWasm(ptr, len));\n}\n\n"],"sourceRoot":""}